// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`macros should support Wildcard: should support Wildcard 1`] = `

import { Wildcard, view } from '@c11/engine.macro';
const foo: view = ({
  id = Wildcard,
  boo = Observe.foo[Arg.id].foo,
  bar = Observe.foo[Wildcard].bar
}) => {}

      ↓ ↓ ↓ ↓ ↓ ↓

"use strict";

var _engine = require("@c11/engine.producer");

var _engineView = require("@c11/engine-view");

var foo = (0, _engineView.view)({
  args: {
    type: "STRUCT",
    value: {
      id: {
        type: "VALUE",
        value: {
          type: "CONST",
          value: _engine.Wildcard,
        },
      },
      boo: {
        type: "OBSERVE",
        path: [
          {
            type: "CONST",
            value: "foo",
          },
          {
            type: "INTERNAL",
            path: ["id"],
          },
          {
            type: "CONST",
            value: "foo",
          },
        ],
      },
      bar: {
        type: "OBSERVE",
        path: [
          {
            type: "CONST",
            value: "foo",
          },
          {
            type: "CONST",
            value: _engine.Wildcard,
          },
          {
            type: "CONST",
            value: "bar",
          },
        ],
      },
    },
    meta: {},
  },
  fn: function fn(_ref) {
    var id = _ref.id,
      boo = _ref.boo,
      bar = _ref.bar;
  },
});


`;
